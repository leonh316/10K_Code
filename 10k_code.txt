
Problems: 

1. Data Types: [Reverse Integer](https://leetcode.com/problems/reverse-integer/)
2. Variables and Constants: [Two Sum](https://leetcode.com/problems/two-sum/)
3. Operators: [Valid Parentheses](https://leetcode.com/problems/valid-parentheses/)
4. Control Structures: [Fizz Buzz](https://leetcode.com/problems/fizz-buzz/)
5. Data Structures: [Valid Anagram](https://leetcode.com/problems/valid-anagram/)
6. Error Handling: This concept is rarely specifically targeted in LeetCode problems. However, good error handling can help debug problems.
7. Functions and Function Arguments: [Palindrome Number](https://leetcode.com/problems/palindrome-number/)
8. Object-Oriented Programming: [Design Parking System](https://leetcode.com/problems/design-parking-system/)
9. Inheritance and Polymorphism: [Design Twitter](https://leetcode.com/problems/design-twitter/)
10. Encapsulation and Abstraction: [Design HashMap](https://leetcode.com/problems/design-hashmap/)
11. Recursion: [Reverse Linked List](https://leetcode.com/problems/reverse-linked-list/)
12. Iteration: [Reverse Linked List](https://leetcode.com/problems/reverse-linked-list/)
13. Sorting: [Merge Two Sorted Lists](https://leetcode.com/problems/merge-two-sorted-lists/)
14. Searching: [First Bad Version](https://leetcode.com/problems/first-bad-version/)
15. Graphs: [Number of Islands](https://leetcode.com/problems/number-of-islands/)
16. Trees: [Binary Tree Inorder Traversal](https://leetcode.com/problems/binary-tree-inorder-traversal/)
17. Stacks: [Min Stack](https://leetcode.com/problems/min-stack/)
18. Queues: [Implement Queue using Stacks](https://leetcode.com/problems/implement-queue-using-stacks/)
19. Heaps: [Kth Largest Element in an Array](https://leetcode.com/problems/kth-largest-element-in-an-array/)
20. Hash Tables: [Group Anagrams](https://leetcode.com/problems/group-anagrams/)
21. Linked Lists: [Merge Two Sorted Lists](https://leetcode.com/problems/merge-two-sorted-lists/)
22. Strings: [Valid Palindrome](https://leetcode.com/problems/valid-palindrome/)
23. Arrays: [Two Sum](https://leetcode.com/problems/two-sum/)
24. Bit Manipulation: [Number of 1 Bits](https://leetcode.com/problems/number-of-1-bits/)
25. Dynamic Programming: [Climbing Stairs](https://leetcode.com/problems/climbing-stairs/)
26. Greedy Algorithms: [Best Time to Buy and Sell Stock](https://leetcode.com/problems/best-time-to-buy-and-sell-stock/)
27. Backtracking: [Letter Combinations of a Phone Number](https://leetcode.com/problems/letter-combinations-of-a-phone-number/)
28. Divide and Conquer: [Merge k Sorted Lists](https://leetcode.com/problems/merge-k-sorted-lists/)
29. Sliding Window: [Minimum Window Substring](https://leetcode.com/problems/minimum-window-substring/)
30. Two Pointers: [Container With Most Water](https://leetcode.com/problems/container-with-most-water/)
31. Union Find: [Number of Islands](https://leetcode.com/problems/number-of-islands/)
32. Topological Sort: [Course Schedule](https://leetcode.com/problems/course-schedule/)
33. Trie: [Implement Trie (Prefix Tree)](https://leetcode.com/problems/implement-trie-prefix-tree/)
34. Binary Search: [Search in Rotated Sorted Array](https://leetcode.com/problems/search-in-rotated-sorted-array/)
35. Random: [Insert Delete GetRandom O(1)](https://leetcode.com/problems/insert-delete-getrandom-o1/)
36. Geometry: [Valid Square](https://leetcode.com/problems/valid-square/)
37. Math: [Power of Three](https://leetcode.com/problems/power-of-three/)



Core concepts: -- 25 leet code problems that demostrate the core concepts of python programming

Two Sum (Easy): To understand the basics of list and dictionary manipulations. https://leetcode.com/problems/two-sum/
Valid Parentheses (Easy): Demonstrates the use of Python stack data structures. https://leetcode.com/problems/valid-parentheses/
FizzBuzz (Easy): A classic problem to demonstrate control flow in Python. https://leetcode.com/problems/fizz-buzz/
Maximum Subarray (Easy): To understand the concept of dynamic programming. https://leetcode.com/problems/maximum-subarray/
Reverse Integer (Easy): To understand data type conversion and string manipulation. https://leetcode.com/problems/reverse-integer/
Palindrome Number (Easy): To understand string and list reversal in Python. https://leetcode.com/problems/palindrome-number/
Single Number (Easy): Highlights the power of XOR operation in Python.  https://leetcode.com/problems/single-number/
Merge Two Sorted Lists (Easy): Demonstrates linked list manipulation in Python. https://leetcode.com/problems/merge-two-sorted-lists/
Climbing Stairs (Easy): A dynamic programming problem that is a variation of the Fibonacci sequence. https://leetcode.com/problems/climbing-stairs/
Symmetric Tree (Easy): To understand the concept of recursion and tree traversal. https://leetcode.com/problems/symmetric-tree/
Add Two Numbers (Medium): Demonstrates the handling of linked lists.    https://leetcode.com/problems/add-two-numbers/
Longest Substring Without Repeating Characters (Medium): Demonstrates string manipulation and sliding window concept. https://leetcode.com/problems/longest-substring-without-repeating-characters/
3Sum (Medium): Demonstrates the two-pointer technique. https://leetcode.com/problems/3sum/
Generate Parentheses (Medium): Demonstrates depth-first search (DFS) and recursion. https://leetcode.com/problems/generate-parentheses/
Number of Islands (Medium): Demonstrates depth-first search (DFS) and breadth-first search (BFS) in Python. https://leetcode.com/problems/number-of-islands/
Product of Array Except Self (Medium): Demonstrates the use of extra space to achieve a time-efficient solution. https://leetcode.com/problems/product-of-array-except-self/
Word Break (Medium): A dynamic programming problem that demonstrates the concept of memoization. https://leetcode.com/problems/word-break/
Valid Sudoku (Medium): Demonstrates matrix manipulation. https://leetcode.com/problems/valid-sudoku/
Binary Tree Inorder Traversal (Medium): Demonstrates tree traversal techniques. https://leetcode.com/problems/binary-tree-inorder-traversal/
Subsets (Medium): Demonstrates the concept of bit manipulation and recursion. https://leetcode.com/problems/subsets/
Median of Two Sorted Arrays (Hard): Demonstrates binary search and understanding of complex problem statements. https://leetcode.com/problems/median-of-two-sorted-arrays/
Regular Expression Matching (Hard): Demonstrates the use of dynamic programming in string matching problems. https://leetcode.com/problems/regular-expression-matching/
Longest Valid Parentheses (Hard): Demonstrates the use of stack in complex string manipulation. https://leetcode.com/problems/longest-valid-parentheses/
Largest Rectangle in Histogram (Hard): Demonstrates stack and array manipulation. https://leetcode.com/problems/largest-rectangle-in-histogram/
Longest Consecutive Sequence (Hard): Demonstrates the use of set data structure and array manipulation. https://leetcode.com/problems/longest-consecutive-sequence/


Easy:

Two Sum (Easy): To understand the basics of list and dictionary manipulations. https://leetcode.com/problems/two-sum/
Maximum Subarray (Easy): To understand the concept of dynamic programming. https://leetcode.com/problems/maximum-subarray/
Valid Parentheses (Easy): Demonstrates the use of Python stack data structures. https://leetcode.com/problems/valid-parentheses/
Best Time to Buy and Sell Stock (Easy): To understand the concept of greedy algorithms. https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
House Robber (Easy): A dynamic programming problem that is a variation of the Fibonacci sequence. https://leetcode.com/problems/house-robber/
Reverse Linked List (Easy): Demonstrates linked list manipulation in Python. https://leetcode.com/problems/reverse-linked-list/
Single Number (Easy): Highlights the power of XOR operation in Python.  https://leetcode.com/problems/single-number/
Merge Two Sorted Lists (Easy): Demonstrates linked list manipulation in Python. https://leetcode.com/problems/merge-two-sorted-lists/
Climbing Stairs (Easy): A dynamic programming problem that is a variation of the Fibonacci sequence. https://leetcode.com/problems/climbing-stairs/
Symmetric Tree​1​. (Easy): To understand the concept of recursion and tree traversal. https://leetcode.com/problems/symmetric-tree/


Intermediate:

Longest Substring Without Repeating Characters (Medium): Demonstrates string manipulation and sliding window concept. https://leetcode.com/problems/longest-substring-without-repeating-characters/
Add Two Numbers (Medium): Demonstrates the handling of linked lists.    https://leetcode.com/problems/add-two-numbers/
3Sum (Medium): Demonstrates the two-pointer technique. https://leetcode.com/problems/3sum/
Longest Palindromic Substring (Medium): Demonstrates the concept of dynamic programming. https://leetcode.com/problems/longest-palindromic-substring/
Container With Most Water (Medium): Demonstrates the two-pointer technique. https://leetcode.com/problems/container-with-most-water/
Generate Parentheses (Medium): Demonstrates depth-first search (DFS) and recursion. https://leetcode.com/problems/generate-parentheses/
Number of Islands (Medium): Demonstrates depth-first search (DFS) and breadth-first search (BFS) in Python. https://leetcode.com/problems/number-of-islands/
Search in Rotated Sorted Array (Medium): Demonstrates the concept of binary search. https://leetcode.com/problems/search-in-rotated-sorted-array/
Longest Increasing Subsequence (Medium): Demonstrates the concept of dynamic programming. https://leetcode.com/problems/longest-increasing-subsequence/
Find the Duplicate Number​1​. (Medium): Demonstrates the concept of Floyd's Tortoise and Hare (Cycle Detection). https://leetcode.com/problems/find-the-duplicate-number/

Hard:

Median of Two Sorted Arrays (Hard): Demonstrates binary search and understanding of complex problem statements. https://leetcode.com/problems/median-of-two-sorted-arrays/
Trapping Rain Water (Hard): Demonstrates the two-pointer technique. https://leetcode.com/problems/trapping-rain-water/
Regular Expression Matching (Hard): Demonstrates the use of dynamic programming in string matching problems. https://leetcode.com/problems/regular-expression-matching/ 
Merge k Sorted Lists (Hard): Demonstrates the use of heap data structure. https://leetcode.com/problems/merge-k-sorted-lists/
Minimum Window Substring (Hard): Demonstrates the sliding window technique. https://leetcode.com/problems/minimum-window-substring/
Edit Distance (Hard): Demonstrates the concept of dynamic programming. https://leetcode.com/problems/edit-distance/
Largest Rectangle in Histogram (Hard): Demonstrates stack and array manipulation. https://leetcode.com/problems/largest-rectangle-in-histogram/
Longest Valid Parentheses (Hard): Demonstrates the use of stack in complex string manipulation. https://leetcode.com/problems/longest-valid-parentheses/
Longest Consecutive Sequence (Hard): Demonstrates the use of set data structure and array manipulation. https://leetcode.com/problems/longest-consecutive-sequence/
First Missing Positive​1​. (Hard): Demonstrates the use of set data structure and array manipulation. https://leetcode.com/problems/first-missing-positive/

"""