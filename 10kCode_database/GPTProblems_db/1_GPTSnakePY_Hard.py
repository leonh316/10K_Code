"""

## LeetCode Problem: Use ChatGPT-4 to create a Python Pygame Snake Game

**Difficulty:** Hard

**Problem Statement:**

Your task is to build a simple Snake Game using Pygame in Python. However, the catch is that you're not going to write the code directly. Instead, you will use the AI model, ChatGPT-4, to generate the game code for you.

You need to construct an appropriate prompt that will instruct ChatGPT-4 to output the necessary code. 

The Snake Game should follow these rules:

1. The snake moves continuously in the direction last specified by the user. It can move up, down, left, or right.

2. The snake grows longer each time it eats the fruit that randomly appears in the game.

3. The game ends when the snake runs into the screen boundary or into itself.

The final code produced by ChatGPT-4 must pass all the tests mentioned in the section below.

Remember to handle the communication with the AI model, including providing the model with necessary inputs (the prompt) and processing the outputs (the code).

**Inputs:**

1. A string prompt that you provide to ChatGPT-4

**Outputs:**

1. Python code of the snake game generated by ChatGPT-4

**Constraints:**

* The prompt should be in English and should not exceed 500 characters.

* The generated code must be in Python and use the Pygame library.

* The size of the game screen must be 800x600 pixels.

* The snake and the fruit must be represented as square blocks of size 20x20 pixels.

* The speed of the snake must increase gradually as it eats more fruit.

* The game must display the current score, which is the total number of fruits eaten.

* The game must end and display a game over message when the snake hits itself or the screen boundary.

**Example:**

**Input:**

`"Can you generate python code for a snake game using pygame? The game screen size should be 800x600 pixels. The snake and fruit are square blocks of 20x20 pixels. The snake's speed should increase gradually as it eats more fruit. Display the score on the screen and show a game over message when the game ends."`

**Output:**

*Python code generated by ChatGPT-4 that fulfills all the requirements.*

**Test Cases:**

Your solution will be evaluated against a set of test cases. These tests will include but are not limited to:

1. Checking if the Python code runs without any errors.

2. Checking if the snake is able to move in all four directions.

3. Checking if the fruit randomly appears on the game screen.

4. Checking if the snake grows longer after eating the fruit.

5. Checking if the game ends when the snake hits the screen boundary or itself.

6. Checking if the current score is correctly displayed on the screen.

7. Checking if a game over message is displayed when the game ends.

**Hints:**

Remember to provide clear instructions to ChatGPT-4 about the specific requirements of the game. You may need to experiment with different prompts to get the desired output. 

Remember to keep the prompts within the given character limit and ensure the game rules are implemented correctly in the generated Python code.
"""